name: Publish

on:
  push:
    paths:
      - ".changeset/**"
      - "packages/**"
      - ".github/workflows/release.yml"
    branches:
      - main
      - ci/release

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Install
        uses: ./.github/composite-actions/install

      - name: Build packages
        run: yarn build

      - name: Publish packages
        id: changesets
        uses: changesets/action@v1
        with:
          publish: yarn release
        env:
          NODE_AUTH_TOKEN: ${{secrets.NPM_TOKEN}}
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}

      - name: Release to dev tag
        if: steps.changesets.outputs.published != 'true'
        run: |
          git checkout main
          yarn changeset version --snapshot dev
          yarn changeset publish --tag dev
        env:
          NODE_AUTH_TOKEN: ${{secrets.NPM_TOKEN}}
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}

  create_timestamp:
    runs-on: ubuntu-latest

    outputs:
      timestamp: ${{ steps.set_timestamp.outputs.timestamp }}

    steps:
      - name: Set Timestamp
        id: set_timestamp
        run: |
          echo "::set-output name=timestamp::$(date +'%s' | cut -c1-8)"

  release-extension:
    name: VSCode Marketplace
    needs: create_timestamp
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: windows-latest
            target: win32-x64
            npm_config_arch: x64
          - os: windows-latest
            target: win32-arm64
            npm_config_arch: arm
          - os: ubuntu-latest
            target: linux-x64
            npm_config_arch: x64
          - os: ubuntu-latest
            target: linux-arm64
            npm_config_arch: arm64
          - os: ubuntu-latest
            target: linux-armhf
            npm_config_arch: arm
          - os: ubuntu-latest
            target: alpine-x64
            npm_config_arch: x64
          - os: macos-latest
            target: darwin-x64
            npm_config_arch: x64
          - os: macos-latest
            target: darwin-arm64
            npm_config_arch: arm64
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Install
        uses: ./.github/composite-actions/install

      - name: Build packages
        run: yarn build

      - name: Set Environment Variable
        run: echo "VSCE_RELEASE_VERSION=$(date +'%s' | cut -c1-8)" >> $GITHUB_ENV

      - name: Publish RC
        if: steps.changesets.outputs.published != 'true'
        working-directory: ./packages/vscode
        run: |
          yarn release
        env:
          VSCE_TOKEN: ${{secrets.VSCE_TOKEN}}
          VSCE_RELEASE_VERSION: ${{ needs.create_timestamp.outputs.timestamp }}
          VSCE_RELEASE_TYPE: rc
          VSCE_TARGET: ${{ matrix.target }}

      - name: Publish extension
        if: steps.changesets.outputs.published == 'true'
        working-directory: ./packages/vscode
        run: |
          yarn release
        env:
          VSCE_TOKEN: ${{secrets.VSCE_TOKEN}}
          VSCE_RELEASE_VERSION: ${{ needs.create_timestamp.outputs.timestamp }}
          VSCE_RELEASE_TYPE: stable
